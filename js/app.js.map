{"version":3,"file":"app.js","sources":["../node_modules/composi/lib/h.js","../node_modules/composi/lib/patch.js","../node_modules/composi/lib/mixin.js","../node_modules/composi/lib/component.js","../dev/components/title.js","../dev/components/bitcoinMonitor/indicator.js","../dev/components/bitcoinMonitor/display.js","../node_modules/unfetch/dist/unfetch.es.js","../dev/services/bitcoinService.js","../dev/services/currencies.js","../dev/services/currencyService.js","../dev/components/bitcoinMonitor/BitcoinMonitor.js","../dev/app.js"],"sourcesContent":["/**\n * Hyperscript function. Enables definition of HTML/SVG using functions.\n * @param {string} type The name of the HTML or SVG tag to create.\n * @param {object} props And object of property/value pairs.\n * @param {string, number, boolean, any[]} children Any child elements.\n */\nexport function h(type, props, ...args) {\n  let node\n  const children = []\n\n  // Go thru args from front to back.\n  while (args.length) {\n    // If child is array, process.\n    if (Array.isArray((node = args.shift()))) {\n      node.map(item => args.push(item))\n    // Else check if child is string or number.\n    } else if (node != null && typeof node !== 'boolean') {\n      typeof node === \"number\" ? node = node + '' : node\n      children.push(node)\n    }\n  }\n  \n  return typeof type === \"string\" \n    ? {type, props: props || {}, children } \n    : type(props || {}, children)\n}\n","/**\n * A function to merge two objects together. The properties of the second object will overwrite any matching properties in the first object.\n * @param {Object} obj1 The first object to merge.\n * @param {Object} obj2 The second object to merge.\n */\nfunction mixin(obj1, obj2) {\n  const result = {}\n  for (let i in obj1) {\n    result[i] = obj1[i]\n  }\n  for (let i in obj2) {\n    result[i] = obj2[i]\n  }\n  return result\n}\n\n/**\n * @constructor \n * @param {node} oldNode Original node or null.\n * @param {node} newNode New node.\n * @param {node} element The component root element.\n * @param {node} container The container element in which component is rendered.\n */\nexport function patch(oldNode, newNode, element, container) {\n  return diffAndPatch(container || document.body, element, oldNode, newNode)\n}\n\n/**\n * Patch functions:\n * setProps \n * createNode\n * createElement\n * getKey\n * updateElement\n * removeElement\n * diffAndPatch\n */\n\n/**\n * Function to set properties and attributes on element.\n * @param {node} element \n * @param {string} name \n * @param {string|number|boolean} value \n * @param {string|number|boolean} oldValue \n */\nfunction setProps(element, name, value, oldValue) {\n  if (name === 'key') {\n  } else if (name === 'style' && typeof value !== 'string') {\n    for (let name in mixin(oldValue, (value = value || {}))) {\n      element.style[name] = value[name] + \"\" || ''\n    }\n  } else {\n    if (value === 0) value = value + \"\"\n    // Handle cases where 'className' is used:\n    if (name === 'className') name = 'class'\n    if (/^on.*$/.test(name)) name = name.toLowerCase()\n    // Cannot set SVG properties this way, so test:\n    if (element.namespaceURI !== 'http://www.w3.org/2000/svg') element[name] = value\n\n    // In case of inline events, value would be function.\n    // This avoids resetting them if they were set above as a property.\n    if (typeof value !== 'function') {\n      if (!!value) {\n        // Support SVG 'xlink:href' property:\n        if (name === 'xlink-href') {\n          element.setAttributeNS('http://www.w3.org/1999/xlink', 'href', value)\n          element.setAttribute('href', value)\n        } else {\n          element.setAttribute(name, value)\n        }\n      } else {\n        element.removeAttribute(name)\n      }\n    }\n  }\n}\n\n/**\n * Function to create an HTML or SVG node.\n * @param {node} node node A node to create.\n * @param {svg} svg Whether the node is SVG or not.\n */\nfunction createNode(node, svg) {\n  const element = (svg = svg || node.type === \"svg\")\n  ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.type)\n  : document.createElement(node.type)\n\n  Object.keys(node.props).forEach(key => setProps(element, key, node.props[key]))\n  node.children.map(child => element.appendChild(createElement(child, svg)))\n  return element\n}\n\n/**\n * Function to convert hyperscript/JSX into DOM nodes.\n * @param {jsx|hyperscript} node A node to create.\n * @param {svg} svg Whether the node is SVG or not.\n */\nfunction createElement(node, svg) {\n  return typeof node === \"string\" ? document.createTextNode(node) : createNode(node, svg)\n}\n\n/**\n * Function to get a node's key.\n * @param {node} node \n */\nfunction getKey(node) {\n  if (node && node.props) {\n    return node.props.key\n  }\n}\n\n/**\n * Update an element with new values for properties and/or children.\n * @param {Element} element \n * @param {node} oldProps \n * @param {object} props \n */\nfunction updateElement(element, oldProps, props) {\n  Object.keys(mixin(oldProps, props)).forEach(key => {\n    let value = props[key]\n    let oldValue = key === \"value\" || key === \"checked\" ? element[key] : oldProps[key]\n\n    if (value !== oldValue) setProps(element, key, value, oldValue)\n  })\n}\n\n/**\n * Function to remove element from DOM.\n * @param {node} container The container of the element to remove.\n * @param {node} element The element to remove.\n */\nconst removeElement = (container, element) => container.removeChild(element)\n\n/**\n * Function to patch DOM. Diffs virtual nodes, then patches the DOM.\n * @param {node} container \n * @param {node} element \n * @param {node} oldNode \n * @param {node} newNode \n * @param {boolean} svg \n * @param {node} nextSibling \n */\nfunction diffAndPatch(container, element, oldNode, newNode, svg, nextSibling) {\n  // There is no oldNode, so this is first render.\n  if (oldNode == null) {\n    element = container.insertBefore(createElement(newNode, svg), element)\n  // There's an oldNode, so patch.\n  } else if (newNode.type != null && newNode.type === oldNode.type) {\n    updateElement(element, oldNode.props, newNode.props)\n\n    svg = svg || newNode.type === \"svg\"\n    const len = newNode.children.length\n    let oldLen = oldNode.children.length\n    let oldKeyed = {}\n    let oldElements = []\n    let keyed = {}\n\n    let k = 0\n    while (k < oldLen) {\n      let oldElement = (oldElements[k] = element.childNodes[k])\n      let oldChild = oldNode.children[k]\n      let oldKey = getKey(oldChild)\n      if (null != oldKey) oldKeyed[oldKey] = [oldElement, oldChild]\n      k++\n    }\n\n    let i = 0, j = 0\n    while (j < len) {\n      let oldElement = oldElements[i]\n      let oldChild = oldNode.children[i]\n      let newChild = newNode.children[j]\n      let oldKey = getKey(oldChild)\n      if (keyed[oldKey]) {\n        i++\n        continue\n      }\n      \n      let newKey = getKey(newChild)\n      let keyedNode = oldKeyed[newKey] || []\n      if (null == newKey) {\n        if (null == oldKey) {\n          diffAndPatch(element, oldElement, oldChild, newChild, svg)\n          j++\n        }\n        i++\n      } else {\n        oldKey === newKey ? diffAndPatch(element, keyedNode[0], keyedNode[1], newChild, svg) && i++ :\n        keyedNode[0] ? element.insertBefore(keyedNode[0], oldElement) && diffAndPatch(element, keyedNode[0], keyedNode[1], newChild, svg) : diffAndPatch(element, oldElement, null, newChild, svg)\n        \n        keyed[newKey] = newChild\n        j++\n      }\n    }\n\n    while (i < oldLen) {\n      let oldChild = oldNode.children[i]\n      let oldKey = getKey(oldChild)\n      if (null == oldKey) removeElement(element, oldElements[i])\n      i++\n    }\n\n    Object.keys(oldKeyed).forEach(key => {\n      let keyedNode = oldKeyed[key]\n      let reusableNode = keyedNode[1]\n      if (!keyed[reusableNode.props.key]) {\n        removeElement(element, keyedNode[0])\n      }\n    })\n  } else if (element && newNode !== element.nodeValue) {\n    if (typeof newNode === \"string\" && typeof oldNode === \"string\") {\n      element.nodeValue = newNode\n    } else {\n      element = container.insertBefore(\n        createElement(newNode, svg),\n        (nextSibling = element)\n      )\n      removeElement(container, nextSibling, oldNode.data)\n    }\n  }\n  return element\n}\n","/**\n * A mixin function used for updating component state.\n * @param {object} obj1 An object as the target.\n * @param {object} obj2 An object of properties to target.\n */\nexport const mixin = (obj1, obj2) => {\n  Object.keys(obj2).forEach(p => {\n    if (obj2.hasOwnProperty(p)) {\n      Object.defineProperty(obj1, p, {\n        value: obj2[p],\n        writable: true,\n        enumerable: false,\n        configurable: true\n      })\n    }\n  })\n}\n","import {h} from './h'\nimport {patch} from './patch'\nimport {mixin} from './mixin'\n\nvar rAF = window.requestAnimationFrame\n  || window.webkitRequestAnimationFrame\n  || window.mozRequestAnimationFrame\n  || window.msRequestAnimationFrame\n  || function(cb) { return setTimeout(cb, 16) }\n\n/**\n * @type {object} dataStore A pseudo-private property using Date object to store the component's state.\n */\nconst dataStore = new Date().getTime()\n\n/**\n * @class Class to create a component\n */\nexport class Component {\n  /**\n   * Constructor for Component class.\n   * @typedef {object} props An object of property/values to configure the class instance.\n   * @property {string|element} props.container The container element in which to render the component.\n   * @property {state} [props.state] The state object of the component. This can be of type boolean, string, number, object or array.\n   * @property {function} props.render A function that returns nodes to render to the DOM.\n   */\n  constructor(props) {\n    /** @type {props} */\n    if (!props) props = {}\n    this.selector = props.container || props.root ||  'body'\n    \n    if (props.render) {\n      this.render = props.render\n    }\n    \n    if (props.state) {\n      this.state = props.state\n    }\n\n    this.oldNode = null\n    if (this.selector) {\n      this.container = document.querySelector(this.selector)\n    }\n    this.componentShouldUpdate = true\n    \n    this.mounted = false\n    this.element\n    \n    /**\n     * Handle lifecycle methods.\n     */\n    if (props.beforeCreateComponent) {\n      this.beforeCreateComponent = props.beforeCreateComponent\n    }\n    // Alias for React lifecycle hook:\n    if (props.componentWillMount || this.componentWillMount) {\n      this.beforeCreateComponent = props.componentWillMount || this.componentWillMount\n    }\n    if (props.componentWasCreated) {\n      this.componentWasCreated = props.componentWasCreated\n    }\n    // Alias for React lifecycle hook:\n    if (props.componentDidMount || this.componentDidMount) {\n      this.componentWasCreated = props.componentDidMount || this.componentDidMount\n    }\n    if (props.componentWillUpdate) {\n      this.componentWillUpdate = props.componentWillUpdate\n    }\n    if (props.componentDidUpdate) {\n      this.componentDidUpdate = props.componentDidUpdate\n    }\n    if (props.componentWillUnmount) {\n      this.componentWillUnmount = props.componentWillUnmount\n    }\n  }\n\n  /**\n   * Define getters and setters for state.\n   */\n  set state(data) {\n    this[dataStore] = data\n    rAF(() => this.update())\n  }\n\n  get state() {\n    return this[dataStore]\n  }\n  \n  /**\n   * Method to set a component's state.\n   * @param {string|number|boolean|object|array} data The data to set.\n   * @param {number} [position] The index of an array whose data you want to set.\n   */\n  setState(data, position) {\n    if (typeof data === 'function') {\n      const state = data.call(this, this.state)\n      if (typeof state !== 'function' && !!state) this.setState(state)\n    }\n    if (Array.isArray(this.state)) {\n      const state = this.state\n      if (position || position === 0) {\n        if (typeof state[position] === 'object') {\n          mixin(state[position], data)\n          this.state = state\n        } else {\n          state[position] = data\n          this.state = state\n        }\n      } else {\n        this.state = state\n      }\n    } else if (typeof this.state === 'object') {\n      const state = this.state\n      mixin(state, data)\n      this.state = state\n    } else {\n      this.state = data\n    }\n  }\n\n  /**\n   * Function to render component after data changes.\n   * If data is passed as argument, it will be used.\n   * Otherwise state will be used.\n   * @param {boolean|number|string|object|array} [data ]\n   * @returns void\n   */\n  update(data) {\n    if (!this.render) return\n\n    // If componentShouldUpdate is set to false, render one time only.\n    // All other updates will be ignored.\n    if (!this.componentShouldUpdate && this.mounted) return\n\n    // If data is 0 or non-boolean, use,\n    // else use component state.\n    let __data  = this.state\n    if (data !== true && data) __data = data\n\n    if (this.container && typeof this.container === 'string') {\n      this.selector = this.container\n      this.container = document.querySelector(this.container)\n    }\n\n    // Check if vnode already exists.\n    // Used for deciding whether to fire lifecycle events.\n    const __oldNode = this.oldNode\n    const __render = this.render\n    function testIfVNodesDiffer(data) {\n      try {\n        if (JSON.stringify(this.oldNode) === JSON.stringify(__render(data))) {\n          return false\n        } else {\n          return true\n        }\n      } catch(err) {\n        return true\n      }\n    }\n    // Create virtual dom and check if component id already exists in document.\n    const vdom = this.render(__data)\n    let elem\n    if (vdom && vdom.props && vdom.props.id) {\n      try {\n        elem = this.container.querySelector(`#${vdom.props.id}`)\n      } catch(err) {}\n    }\n\n    // If component element id already exists in DOM, \n    // remove it before rendering the component.\n    if (elem && !this.mounted) {\n      elem.parentNode.removeChild(elem)\n    }\n\n    // Patch DOM with component update.\n    this.element = patch(\n      this.oldNode,\n      (this.oldNode = this.render(__data)),\n      this.element,\n      this.container\n    )\n    if (this.mounted && this.oldNode && testIfVNodesDiffer(__data)) {\n      this.componentWillUpdate && this.componentWillUpdate(this)\n    } else {\n      this.beforeCreateComponent && this.beforeCreateComponent(this)\n      this.componentWasCreated && this.componentWasCreated(this)\n      this.mounted = true\n      return\n    }\n    this.componentDidUpdate && testIfVNodesDiffer(__data) && this.componentDidUpdate(this)\n  }\n  \n  /**\n   * Method to destroy component.\n   * First unbind events.\n   * Then remove component element from DOM.\n   * Also null out component properties.\n   * @returns void\n   */\n  unmount() {\n    const self = this\n    const eventWhitelist = ['click', 'dblclick', 'mousedown','mouseup', 'mouseover','mouseout', 'mouseleave', 'select', 'input', 'change', 'keydown', 'keypress', 'keyup', 'submit']\n    if (!this.element) return\n    this.componentWillUnmount && this.componentWillUnmount(this)\n    eventWhitelist.map(event => {\n      this.element.removeEventListener(event, this)\n    })\n    this.container.removeChild(this.element)\n    this.container = undefined\n    for (let key in this) {\n      delete this[key]\n    }\n    delete this.state\n    this.update = undefined\n    this.unmount = undefined\n  }\n}\n\n// Polyfill for Element.closest:\nif (window.Element && !Element.prototype.closest) {\n  Element.prototype.closest = \n  function(s) {\n    let matches = (this.document || this.ownerDocument).querySelectorAll(s)\n    let i\n    let el = this\n    do {\n      i = matches.length\n      while (--i >= 0 && matches.item(i) !== el) {}\n    } while ((i < 0) && (el = el.parentElement))\n    return el\n  }\n}\n","import {h, Component} from 'composi'\n\nexport const title = new Component({\n  container: 'header',\n  render: (message) => {\n    return (\n      <nav>\n        <i className=\"fa fa-btc fa-3x my-auto d-inline-block\" style={{color: '#FFC107'}}></i>\n        <h1>Composi {message}</h1>\n      </nav>\n    )\n  }\n})\n","import {h} from 'composi';\n\nconst Indicator = props => {\n\n  let indicator = null;\n\n  if (props.currentRate > props.previousRate) {\n    indicator = <i className=\"fa fa-chevron-up text-success ml-2\"></i>;\n  } else if (props.currentRate < props.previousRate) {\n    indicator = <i className=\"fa fa-chevron-down text-danger ml-2\"></i>;\n  } else {\n    indicator = <i className=\"fa fa-minus text-secondary ml-2\"></i>;\n  }\n\n  return indicator;\n};\n\nexport { Indicator };","import {h} from 'composi';\nimport { Indicator } from './indicator';\n\nconst formatNumber = (number) => number.toFixed(4).toString().padEnd(11, '0');\n\nconst Display = (props) => {\n  if (!props.prices.USD) return\n  return (\n  <div>\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th className=\"text-uppercase text-center\"></th>\n          <th className=\"text-uppercase text-center\">Before</th>\n          <th className=\"text-uppercase text-center\">Current</th>\n        </tr>\n      </thead>\n      <tbody className=\"table-body\">\n        <tr>\n          <td>\n            <i className=\"fa fa-usd fa-lg\"></i>\n          </td>\n          <td>\n            {formatNumber(props.prices.USD.previousRate)}\n          </td>\n          <td>\n            {formatNumber(props.prices.USD.currentRate)}\n            <Indicator\n              currentRate={props.prices.USD.currentRate}\n              previousRate={props.prices.USD.previousRate} />\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <i className=\"fa fa-gbp fa-lg\"></i>\n          </td>\n          <td>\n            {formatNumber(props.prices.GBP.previousRate)}\n          </td>\n          <td>\n            {formatNumber(props.prices.GBP.currentRate)}\n            <Indicator \n              currentRate={props.prices.GBP.currentRate}\n              previousRate={props.prices.GBP.previousRate} />\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <i className=\"fa fa-eur fa-lg\"></i>\n          </td>\n          <td>\n            {formatNumber(props.prices.EUR.previousRate)}\n          </td>\n          <td>\n            {formatNumber(props.prices.EUR.currentRate)}\n            <Indicator\n              currentRate={props.prices.EUR.currentRate}\n              previousRate={props.prices.EUR.previousRate} />\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <select\n              name=\"currency\"\n              id=\"currency\"\n              className=\"currency form-control mx-auto\"\n              onChange={props.onCurrencyChanged}>\n              {\n                props.currencies && props.currencies.map(currency => (\n                  <option key={currency.currency} value={currency.currency}>\n                    {currency.currency}\n                  </option>\n                ))\n              }\n            </select>\n          </td>\n          <td>\n            {props.prices.SELECTED && formatNumber(props.prices.SELECTED.previousRate)}\n          </td>\n          <td>\n            {\n              props.prices.SELECTED &&\n              <div>\n                {formatNumber(props.prices.SELECTED.currentRate)}\n                <Indicator\n                  currentRate={props.prices.SELECTED.currentRate}\n                  previousRate={props.prices.SELECTED.previousRate} />\n              </div>\n            }\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n)};\n\n\nexport { Display };","var index = typeof fetch=='function' ? fetch.bind() : function(url, options) {\n\toptions = options || {};\n\treturn new Promise( function (resolve, reject) {\n\t\tvar request = new XMLHttpRequest();\n\n\t\trequest.open(options.method || 'get', url);\n\n\t\tfor (var i in options.headers) {\n\t\t\trequest.setRequestHeader(i, options.headers[i]);\n\t\t}\n\n\t\trequest.withCredentials = options.credentials=='include';\n\n\t\trequest.onload = function () {\n\t\t\tresolve(response());\n\t\t};\n\n\t\trequest.onerror = reject;\n\n\t\trequest.send(options.body);\n\n\t\tfunction response() {\n\t\t\tvar keys = [],\n\t\t\t\tall = [],\n\t\t\t\theaders = {},\n\t\t\t\theader;\n\n\t\t\trequest.getAllResponseHeaders().replace(/^(.*?):\\s*([\\s\\S]*?)$/gm, function (m, key, value) {\n\t\t\t\tkeys.push(key = key.toLowerCase());\n\t\t\t\tall.push([key, value]);\n\t\t\t\theader = headers[key];\n\t\t\t\theaders[key] = header ? (header + \",\" + value) : value;\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tok: (request.status/200|0) == 1,\t\t// 200-299\n\t\t\t\tstatus: request.status,\n\t\t\t\tstatusText: request.statusText,\n\t\t\t\turl: request.responseURL,\n\t\t\t\tclone: response,\n\t\t\t\ttext: function () { return Promise.resolve(request.responseText); },\n\t\t\t\tjson: function () { return Promise.resolve(request.responseText).then(JSON.parse); },\n\t\t\t\tblob: function () { return Promise.resolve(new Blob([request.response])); },\n\t\t\t\theaders: {\n\t\t\t\t\tkeys: function () { return keys; },\n\t\t\t\t\tentries: function () { return all; },\n\t\t\t\t\tget: function (n) { return headers[n.toLowerCase()]; },\n\t\t\t\t\thas: function (n) { return n.toLowerCase() in headers; }\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t});\n};\n\nexport default index;\n//# sourceMappingURL=unfetch.es.js.map\n","import fetch from 'unfetch';\n\nconst mapToPrice = (bpiPrice) => {\n  return {\n    code: bpiPrice.code,\n    description: bpiPrice.description,\n    currentRate: bpiPrice.rate_float\n  };\n};\n\nconst BASE_URL = 'https://api.coindesk.com/v1/bpi';\n\nexport class BitcoinService {  \n  \n  getPrice(currency) {\n    return new Promise((resolve, reject) => {\n      fetch(`${BASE_URL}/currentprice/${currency}.json`)\n        .then(response => response.json())\n        .then(response => {\n          if (response && response.bpi) {\n            resolve({\n              [currency]: mapToPrice(response.bpi[currency])\n            });\n          }\n        })\n        .catch(error => reject(error.message));\n    });\n  }  \n\n  getPrices() {\n    return new Promise((resolve, reject) => {\n      fetch(`${BASE_URL}/currentprice.json`)\n        .then(response => response.json())\n        .then(response => {\n          if (response && response.bpi) {\n            resolve({   \n              EUR: mapToPrice(response.bpi.EUR),\n              GBP: mapToPrice(response.bpi.GBP),\n              USD: mapToPrice(response.bpi.USD)\n            });\n          } else {\n            reject('No Bitcoin prices available');\n          }\n        });\n    });\n  }\n}","export const currencies = [\n    {\n        \"currency\": \"\",\n        \"country\": \"\"\n    },\n    {\n      \"currency\": \"AED\",\n      \"country\": \"United Arab Emirates Dirham\"\n    },\n    {\n      \"currency\": \"AFN\",\n      \"country\": \"Afghan Afghani\"\n    },\n    {\n      \"currency\": \"ALL\",\n      \"country\": \"Albanian Lek\"\n    },\n    {\n      \"currency\": \"AMD\",\n      \"country\": \"Armenian Dram\"\n    },\n    {\n      \"currency\": \"ANG\",\n      \"country\": \"Netherlands Antillean Guilder\"\n    },\n    {\n      \"currency\": \"AOA\",\n      \"country\": \"Angolan Kwanza\"\n    },\n    {\n      \"currency\": \"ARS\",\n      \"country\": \"Argentine Peso\"\n    },\n    {\n      \"currency\": \"AUD\",\n      \"country\": \"Australian Dollar\"\n    },\n    {\n      \"currency\": \"AWG\",\n      \"country\": \"Aruban Florin\"\n    },\n    {\n      \"currency\": \"AZN\",\n      \"country\": \"Azerbaijani Manat\"\n    },\n    {\n      \"currency\": \"BAM\",\n      \"country\": \"Bosnia-Herzegovina Convertible Mark\"\n    },\n    {\n      \"currency\": \"BBD\",\n      \"country\": \"Barbadian Dollar\"\n    },\n    {\n      \"currency\": \"BDT\",\n      \"country\": \"Bangladeshi Taka\"\n    },\n    {\n      \"currency\": \"BGN\",\n      \"country\": \"Bulgarian Lev\"\n    },\n    {\n      \"currency\": \"BHD\",\n      \"country\": \"Bahraini Dinar\"\n    },\n    {\n      \"currency\": \"BIF\",\n      \"country\": \"Burundian Franc\"\n    },\n    {\n      \"currency\": \"BMD\",\n      \"country\": \"Bermudan Dollar\"\n    },\n    {\n      \"currency\": \"BND\",\n      \"country\": \"Brunei Dollar\"\n    },\n    {\n      \"currency\": \"BOB\",\n      \"country\": \"Bolivian Boliviano\"\n    },\n    {\n      \"currency\": \"BRL\",\n      \"country\": \"Brazilian Real\"\n    },\n    {\n      \"currency\": \"BSD\",\n      \"country\": \"Bahamian Dollar\"\n    },\n    {\n      \"currency\": \"BTC\",\n      \"country\": \"Bitcoin\"\n    },\n    {\n      \"currency\": \"BTN\",\n      \"country\": \"Bhutanese Ngultrum\"\n    },\n    {\n      \"currency\": \"BWP\",\n      \"country\": \"Botswanan Pula\"\n    },\n    {\n      \"currency\": \"BYR\",\n      \"country\": \"Belarusian Ruble\"\n    },\n    {\n      \"currency\": \"BZD\",\n      \"country\": \"Belize Dollar\"\n    },\n    {\n      \"currency\": \"CAD\",\n      \"country\": \"Canadian Dollar\"\n    },\n    {\n      \"currency\": \"CDF\",\n      \"country\": \"Congolese Franc\"\n    },\n    {\n      \"currency\": \"CHF\",\n      \"country\": \"Swiss Franc\"\n    },\n    {\n      \"currency\": \"CLF\",\n      \"country\": \"Chilean Unit of Account (UF)\"\n    },\n    {\n      \"currency\": \"CLP\",\n      \"country\": \"Chilean Peso\"\n    },\n    {\n      \"currency\": \"CNY\",\n      \"country\": \"Chinese Yuan\"\n    },\n    {\n      \"currency\": \"COP\",\n      \"country\": \"Colombian Peso\"\n    },\n    {\n      \"currency\": \"CRC\",\n      \"country\": \"Costa Rican Colón\"\n    },\n    {\n      \"currency\": \"CUP\",\n      \"country\": \"Cuban Peso\"\n    },\n    {\n      \"currency\": \"CVE\",\n      \"country\": \"Cape Verdean Escudo\"\n    },\n    {\n      \"currency\": \"CZK\",\n      \"country\": \"Czech Republic Koruna\"\n    },\n    {\n      \"currency\": \"DJF\",\n      \"country\": \"Djiboutian Franc\"\n    },\n    {\n      \"currency\": \"DKK\",\n      \"country\": \"Danish Krone\"\n    },\n    {\n      \"currency\": \"DOP\",\n      \"country\": \"Dominican Peso\"\n    },\n    {\n      \"currency\": \"DZD\",\n      \"country\": \"Algerian Dinar\"\n    },\n    {\n      \"currency\": \"EEK\",\n      \"country\": \"Estonian Kroon\"\n    },\n    {\n      \"currency\": \"EGP\",\n      \"country\": \"Egyptian Pound\"\n    },\n    {\n      \"currency\": \"ERN\",\n      \"country\": \"Eritrean Nnakfa\"\n    },\n    {\n      \"currency\": \"ETB\",\n      \"country\": \"Ethiopian Birr\"\n    },\n    {\n      \"currency\": \"EUR\",\n      \"country\": \"Euro\"\n    },\n    {\n      \"currency\": \"FJD\",\n      \"country\": \"Fijian Dollar\"\n    },\n    {\n      \"currency\": \"FKP\",\n      \"country\": \"Falkland Islands Pound\"\n    },\n    {\n      \"currency\": \"GBP\",\n      \"country\": \"British Pound Sterling\"\n    },\n    {\n      \"currency\": \"GEL\",\n      \"country\": \"Georgian Lari\"\n    },\n    {\n      \"currency\": \"GHS\",\n      \"country\": \"Ghanaian Cedi\"\n    },\n    {\n      \"currency\": \"GIP\",\n      \"country\": \"Gibraltar Pound\"\n    },\n    {\n      \"currency\": \"GMD\",\n      \"country\": \"Gambian Dalasi\"\n    },\n    {\n      \"currency\": \"GNF\",\n      \"country\": \"Guinean Franc\"\n    },\n    {\n      \"currency\": \"GTQ\",\n      \"country\": \"Guatemalan Quetzal\"\n    },\n    {\n      \"currency\": \"GYD\",\n      \"country\": \"Guyanaese Dollar\"\n    },\n    {\n      \"currency\": \"HKD\",\n      \"country\": \"Hong Kong Dollar\"\n    },\n    {\n      \"currency\": \"HNL\",\n      \"country\": \"Honduran Lempira\"\n    },\n    {\n      \"currency\": \"HRK\",\n      \"country\": \"Croatian Kuna\"\n    },\n    {\n      \"currency\": \"HTG\",\n      \"country\": \"Haitian Gourde\"\n    },\n    {\n      \"currency\": \"HUF\",\n      \"country\": \"Hungarian Forint\"\n    },\n    {\n      \"currency\": \"IDR\",\n      \"country\": \"Indonesian Rupiah\"\n    },\n    {\n      \"currency\": \"ILS\",\n      \"country\": \"Israeli New Sheqel\"\n    },\n    {\n      \"currency\": \"INR\",\n      \"country\": \"Indian Rupee\"\n    },\n    {\n      \"currency\": \"IQD\",\n      \"country\": \"Iraqi Dinar\"\n    },\n    {\n      \"currency\": \"IRR\",\n      \"country\": \"Iranian Rial\"\n    },\n    {\n      \"currency\": \"ISK\",\n      \"country\": \"Icelandic Króna\"\n    },\n    {\n      \"currency\": \"JEP\",\n      \"country\": \"Jersey Pound\"\n    },\n    {\n      \"currency\": \"JMD\",\n      \"country\": \"Jamaican Dollar\"\n    },\n    {\n      \"currency\": \"JOD\",\n      \"country\": \"Jordanian Dinar\"\n    },\n    {\n      \"currency\": \"JPY\",\n      \"country\": \"Japanese Yen\"\n    },\n    {\n      \"currency\": \"KES\",\n      \"country\": \"Kenyan Shilling\"\n    },\n    {\n      \"currency\": \"KGS\",\n      \"country\": \"Kyrgystani Som\"\n    },\n    {\n      \"currency\": \"KHR\",\n      \"country\": \"Cambodian Riel\"\n    },\n    {\n      \"currency\": \"KMF\",\n      \"country\": \"Comorian Franc\"\n    },\n    {\n      \"currency\": \"KPW\",\n      \"country\": \"North Korean Won\"\n    },\n    {\n      \"currency\": \"KRW\",\n      \"country\": \"South Korean Won\"\n    },\n    {\n      \"currency\": \"KWD\",\n      \"country\": \"Kuwaiti Dinar\"\n    },\n    {\n      \"currency\": \"KYD\",\n      \"country\": \"Cayman Islands Dollar\"\n    },\n    {\n      \"currency\": \"KZT\",\n      \"country\": \"Kazakhstani Tenge\"\n    },\n    {\n      \"currency\": \"LAK\",\n      \"country\": \"Laotian Kip\"\n    },\n    {\n      \"currency\": \"LBP\",\n      \"country\": \"Lebanese Pound\"\n    },\n    {\n      \"currency\": \"LKR\",\n      \"country\": \"Sri Lankan Rupee\"\n    },\n    {\n      \"currency\": \"LRD\",\n      \"country\": \"Liberian Dollar\"\n    },\n    {\n      \"currency\": \"LSL\",\n      \"country\": \"Lesotho Loti\"\n    },\n    {\n      \"currency\": \"LTL\",\n      \"country\": \"Lithuanian Litas\"\n    },\n    {\n      \"currency\": \"LVL\",\n      \"country\": \"Latvian Lats\"\n    },\n    {\n      \"currency\": \"LYD\",\n      \"country\": \"Libyan Dinar\"\n    },\n    {\n      \"currency\": \"MAD\",\n      \"country\": \"Moroccan Dirham\"\n    },\n    {\n      \"currency\": \"MDL\",\n      \"country\": \"Moldovan Leu\"\n    },\n    {\n      \"currency\": \"MGA\",\n      \"country\": \"Malagasy Ariary\"\n    },\n    {\n      \"currency\": \"MKD\",\n      \"country\": \"Macedonian Denar\"\n    },\n    {\n      \"currency\": \"MMK\",\n      \"country\": \"Myanma Kyat\"\n    },\n    {\n      \"currency\": \"MNT\",\n      \"country\": \"Mongolian Tugrik\"\n    },\n    {\n      \"currency\": \"MOP\",\n      \"country\": \"Macanese Pataca\"\n    },\n    {\n      \"currency\": \"MRO\",\n      \"country\": \"Mauritanian Ouguiya\"\n    },\n    {\n      \"currency\": \"MTL\",\n      \"country\": \"Maltese Lira\"\n    },\n    {\n      \"currency\": \"MUR\",\n      \"country\": \"Mauritian Rupee\"\n    },\n    {\n      \"currency\": \"MVR\",\n      \"country\": \"Maldivian Rufiyaa\"\n    },\n    {\n      \"currency\": \"MWK\",\n      \"country\": \"Malawian Kwacha\"\n    },\n    {\n      \"currency\": \"MXN\",\n      \"country\": \"Mexican Peso\"\n    },\n    {\n      \"currency\": \"MYR\",\n      \"country\": \"Malaysian Ringgit\"\n    },\n    {\n      \"currency\": \"MZN\",\n      \"country\": \"Mozambican Metical\"\n    },\n    {\n      \"currency\": \"NAD\",\n      \"country\": \"Namibian Dollar\"\n    },\n    {\n      \"currency\": \"NGN\",\n      \"country\": \"Nigerian Naira\"\n    },\n    {\n      \"currency\": \"NIO\",\n      \"country\": \"Nicaraguan Córdoba\"\n    },\n    {\n      \"currency\": \"NOK\",\n      \"country\": \"Norwegian Krone\"\n    },\n    {\n      \"currency\": \"NPR\",\n      \"country\": \"Nepalese Rupee\"\n    },\n    {\n      \"currency\": \"NZD\",\n      \"country\": \"New Zealand Dollar\"\n    },\n    {\n      \"currency\": \"OMR\",\n      \"country\": \"Omani Rial\"\n    },\n    {\n      \"currency\": \"PAB\",\n      \"country\": \"Panamanian Balboa\"\n    },\n    {\n      \"currency\": \"PEN\",\n      \"country\": \"Peruvian Nuevo Sol\"\n    },\n    {\n      \"currency\": \"PGK\",\n      \"country\": \"Papua New Guinean Kina\"\n    },\n    {\n      \"currency\": \"PHP\",\n      \"country\": \"Philippine Peso\"\n    },\n    {\n      \"currency\": \"PKR\",\n      \"country\": \"Pakistani Rupee\"\n    },\n    {\n      \"currency\": \"PLN\",\n      \"country\": \"Polish Zloty\"\n    },\n    {\n      \"currency\": \"PYG\",\n      \"country\": \"Paraguayan Guarani\"\n    },\n    {\n      \"currency\": \"QAR\",\n      \"country\": \"Qatari Rial\"\n    },\n    {\n      \"currency\": \"RON\",\n      \"country\": \"Romanian Leu\"\n    },\n    {\n      \"currency\": \"RSD\",\n      \"country\": \"Serbian Dinar\"\n    },\n    {\n      \"currency\": \"RUB\",\n      \"country\": \"Russian Ruble\"\n    },\n    {\n      \"currency\": \"RWF\",\n      \"country\": \"Rwandan Franc\"\n    },\n    {\n      \"currency\": \"SAR\",\n      \"country\": \"Saudi Riyal\"\n    },\n    {\n      \"currency\": \"SBD\",\n      \"country\": \"Solomon Islands Dollar\"\n    },\n    {\n      \"currency\": \"SCR\",\n      \"country\": \"Seychellois Rupee\"\n    },\n    {\n      \"currency\": \"SDG\",\n      \"country\": \"Sudanese Pound\"\n    },\n    {\n      \"currency\": \"SEK\",\n      \"country\": \"Swedish Krona\"\n    },\n    {\n      \"currency\": \"SGD\",\n      \"country\": \"Singapore Dollar\"\n    },\n    {\n      \"currency\": \"SHP\",\n      \"country\": \"Saint Helena Pound\"\n    },\n    {\n      \"currency\": \"SLL\",\n      \"country\": \"Sierra Leonean Leone\"\n    },\n    {\n      \"currency\": \"SOS\",\n      \"country\": \"Somali Shilling\"\n    },\n    {\n      \"currency\": \"SRD\",\n      \"country\": \"Surinamese Dollar\"\n    },\n    {\n      \"currency\": \"STD\",\n      \"country\": \"São Tomé and Príncipe Dobra\"\n    },\n    {\n      \"currency\": \"SVC\",\n      \"country\": \"Salvadoran Colón\"\n    },\n    {\n      \"currency\": \"SYP\",\n      \"country\": \"Syrian Pound\"\n    },\n    {\n      \"currency\": \"SZL\",\n      \"country\": \"Swazi Lilangeni\"\n    },\n    {\n      \"currency\": \"THB\",\n      \"country\": \"Thai Baht\"\n    },\n    {\n      \"currency\": \"TJS\",\n      \"country\": \"Tajikistani Somoni\"\n    },\n    {\n      \"currency\": \"TMT\",\n      \"country\": \"Turkmenistani Manat\"\n    },\n    {\n      \"currency\": \"TND\",\n      \"country\": \"Tunisian Dinar\"\n    },\n    {\n      \"currency\": \"TOP\",\n      \"country\": \"Tongan Pa?anga\"\n    },\n    {\n      \"currency\": \"TRY\",\n      \"country\": \"Turkish Lira\"\n    },\n    {\n      \"currency\": \"TTD\",\n      \"country\": \"Trinidad and Tobago Dollar\"\n    },\n    {\n      \"currency\": \"TWD\",\n      \"country\": \"New Taiwan Dollar\"\n    },\n    {\n      \"currency\": \"TZS\",\n      \"country\": \"Tanzanian Shilling\"\n    },\n    {\n      \"currency\": \"UAH\",\n      \"country\": \"Ukrainian Hryvnia\"\n    },\n    {\n      \"currency\": \"UGX\",\n      \"country\": \"Ugandan Shilling\"\n    },\n    {\n      \"currency\": \"USD\",\n      \"country\": \"United States Dollar\"\n    },\n    {\n      \"currency\": \"UYU\",\n      \"country\": \"Uruguayan Peso\"\n    },\n    {\n      \"currency\": \"UZS\",\n      \"country\": \"Uzbekistan Som\"\n    },\n    {\n      \"currency\": \"VEF\",\n      \"country\": \"Venezuelan Bolívar Fuerte\"\n    },\n    {\n      \"currency\": \"VND\",\n      \"country\": \"Vietnamese Dong\"\n    },\n    {\n      \"currency\": \"VUV\",\n      \"country\": \"Vanuatu Vatu\"\n    },\n    {\n      \"currency\": \"WST\",\n      \"country\": \"Samoan Tala\"\n    },\n    {\n      \"currency\": \"XAF\",\n      \"country\": \"CFA Franc BEAC\"\n    },\n    {\n      \"currency\": \"XAG\",\n      \"country\": \"Silver (troy ounce)\"\n    },\n    {\n      \"currency\": \"XAU\",\n      \"country\": \"Gold (troy ounce)\"\n    },\n    {\n      \"currency\": \"XBT\",\n      \"country\": \"Bitcoin\"\n    },\n    {\n      \"currency\": \"XCD\",\n      \"country\": \"East Caribbean Dollar\"\n    },\n    {\n      \"currency\": \"XDR\",\n      \"country\": \"Special Drawing Rights\"\n    },\n    {\n      \"currency\": \"XOF\",\n      \"country\": \"CFA Franc BCEAO\"\n    },\n    {\n      \"currency\": \"XPF\",\n      \"country\": \"CFP Franc\"\n    },\n    {\n      \"currency\": \"YER\",\n      \"country\": \"Yemeni Rial\"\n    },\n    {\n      \"currency\": \"ZAR\",\n      \"country\": \"South African Rand\"\n    },\n    {\n      \"currency\": \"ZMK\",\n      \"country\": \"Zambian Kwacha (pre-2013)\"\n    },\n    {\n      \"currency\": \"ZMW\",\n      \"country\": \"Zambian Kwacha\"\n    },\n    {\n      \"currency\": \"ZWL\",\n      \"country\": \"Zimbabwean Dollar\"\n    }\n  ]","import {currencies} from './currencies'\n\nexport class CurrencyService {\n    \n    getSupportedCurrencies() {\n        return currencies;\n    }\n}","import { h, Component } from 'composi';\nimport { Display } from './display';\nimport { BitcoinService}  from '../../services/bitcoinService';\nimport { CurrencyService } from '../../services/currencyService';\n\nconst bitcoinService = new BitcoinService();\nconst currencyService = new CurrencyService();\n\nconst mapToPrice = (currentPrice, previousPrice) => {\n  return {\n    code: currentPrice.code,\n    description: currentPrice.description,\n    currentRate: currentPrice.currentRate,\n    previousRate: previousPrice ? previousPrice.currentRate : 0\n  };\n};\n\nclass BitcoinMonitor extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      prices: {},\n      ready: false,\n      currencies: []\n    };\n\n    this.handleOnRefresh = this.handleOnRefresh.bind(this);\n    this.loadBitcoinPriceIndex = this.loadBitcoinPriceIndex.bind(this);\n    this.handleOnCurrencyChanged = this.handleOnCurrencyChanged.bind(this);\n  }\n\n  \n  handleOnRefresh() {\n    if (this.state.prices.SELECTED) {      \n      \n      const currency = this.state.prices.SELECTED.code;\n      \n      bitcoinService\n        .getPrice(currency)\n        .then(price => {\n          if (price) {\n            this.loadBitcoinPriceIndex(price);\n          } else {\n            this.loadBitcoinPriceIndex();\n          }\n        })\n        .catch(error => console.log(error.message));\n\n    } else {\n      this.loadBitcoinPriceIndex();\n    }\n  }\n\n  \n  handleOnCurrencyChanged(event) {\n    \n    const currency = event.target.value;\n    \n    bitcoinService\n      .getPrice(currency)\n      .then(price => {\n        if (price) {          \n          this.setState(prevState => {\n            const prices = prevState.prices;\n            prices.SELECTED = mapToPrice(price[currency], prevState.prices[currency]);\n            return { prices: prices };\n          });\n        }\n      })\n      .catch(error => console.log(error.message));\n  }\n\n  \n  loadBitcoinPriceIndex(additionalPrice) {\n    bitcoinService\n      .getPrices()\n      .then(prices => {\n        if (prices) {     \n          this.setState(prevState => {\n            const newPrices = {\n              EUR: mapToPrice(prices.EUR, prevState.prices.EUR),\n              GBP: mapToPrice(prices.GBP, prevState.prices.GBP),\n              USD: mapToPrice(prices.USD, prevState.prices.USD)\n            };\n\n            if (additionalPrice) {\n              newPrices.SELECTED = mapToPrice(\n                Object.values(additionalPrice)[0],\n                prevState.prices.SELECTED);\n            }\n\n            return { prices: newPrices, ready: true };\n          });\n        }\n      })\n      .catch(error => console.log(error.message));\n  }\n\n  \n  loadSupportedCurrencies() {\n    this.setState(() => ({ currencies: currencyService.getSupportedCurrencies() }));\n  }\n\n  \n  componentDidMount(){\n    this.loadSupportedCurrencies();\n    this.loadBitcoinPriceIndex();\n  }\n\n\n  render() {\n    if (this.state.ready === true) {\n\n    }\n    return (\n       <div>\n        \n        <Display \n          currencies={this.state.currencies}\n          prices={this.state.prices}\n          onCurrencyChanged={this.handleOnCurrencyChanged} />\n\n        <div className=\" mt-5 text-center\">\n          <button className=\"btn btn-lg btn-refresh\" onClick={this.handleOnRefresh}>\n            <i className=\"fa fa-refresh fa-lg\"></i>\n          </button>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport { BitcoinMonitor };","import {h, Component} from 'composi'\nimport {title} from './components/title'\n\nimport {BitcoinMonitor} from './components/bitcoinMonitor/BitcoinMonitor'\nimport { BitcoinService}  from './services/bitcoinService';\nconst bitcoinService = new BitcoinService();\nconst prices = bitcoinService.getPrices()\n\n// Set state on component.\n// Will cause component to render.\ntitle.state = 'Bitcoin Monitor'\n\nconst bit = new BitcoinMonitor()\n// window.bit = bit;\n"],"names":["h","type","props","args","node","children","length","Array","isArray","shift","map","push","item","mixin","obj1","obj2","result","i","patch","oldNode","newNode","element","container","diffAndPatch","svg","nextSibling","insertBefore","createElement","oldProps","keys","forEach","value","key","oldValue","setProps","len","oldLen","oldKeyed","oldElements","keyed","k","oldElement","childNodes","oldChild","oldKey","getKey","j","newChild","newKey","keyedNode","removeElement","reusableNode","nodeValue","data","document","body","name","style","test","toLowerCase","namespaceURI","setAttributeNS","setAttribute","removeAttribute","createTextNode","createElementNS","appendChild","child","removeChild","hasOwnProperty","p","defineProperty","rAF","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","cb","setTimeout","dataStore","Date","getTime","Component","selector","root","render","state","this","querySelector","componentShouldUpdate","mounted","beforeCreateComponent","componentWillMount","componentWasCreated","componentDidMount","componentWillUpdate","componentDidUpdate","componentWillUnmount","position","call","setState","babelHelpers.typeof","__data","__render","vdom","elem","id","err","parentNode","testIfVNodesDiffer","JSON","stringify","removeEventListener","event","undefined","update","unmount","_this2","Element","prototype","closest","s","matches","ownerDocument","querySelectorAll","el","parentElement","title","message","className","color","Indicator","currentRate","previousRate","formatNumber","number","toFixed","toString","padEnd","Display","prices","USD","GBP","EUR","onCurrencyChanged","currencies","currency","SELECTED","index","fetch","bind","url","options","Promise","resolve","reject","request","XMLHttpRequest","open","method","headers","setRequestHeader","response","header","all","getAllResponseHeaders","replace","m","status","statusText","responseURL","responseText","then","parse","Blob","n","withCredentials","credentials","onload","onerror","send","mapToPrice","bpiPrice","code","description","rate_float","BASE_URL","BitcoinService","json","bpi","catch","error","CurrencyService","bitcoinService","currencyService","currentPrice","previousPrice","BitcoinMonitor","handleOnRefresh","_this","loadBitcoinPriceIndex","handleOnCurrencyChanged","getPrice","price","console","log","target","prevState","additionalPrice","getPrices","newPrices","Object","values","ready","getSupportedCurrencies","loadSupportedCurrencies","onClick"],"mappings":"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"}